@model List<BtkAkademi.Web.Models.Message>

<div id="messages">
@{
    var conversations = new List<Guid>();
    foreach (var item in Model)
    {
        if (!conversations.Contains(item.ConversationId))
        {
            conversations.Add(item.ConversationId);
        }
    }

    foreach (var item in conversations)
    {
        <div data-conversation="@item">
            <h4>Conversation-@item Messages</h4>
            @{
                var messages = Model.Where(m => m.ConversationId == item);
            }
            @foreach (var message in messages)
            {
                <div>
                    <span>User-@message.clientConnectionId:</span>
                    <span>@message.MessageContent</span>
                </div>
            }
        </div>
    }
}
</div>
<form id="message-form">
    <input type="text" placeholder="Mesaj Gönder" />
    <button type="button">Gönder</button>
</form>

<script src="~/js/signalr/dist/browser/signalr.js" type="text/javascript"></script>
<script>
    let messageDiv = document.querySelector("#messages");
    let button = document.querySelector("#message-form>button");
    let input = document.querySelector("#message-form>input");
    let conn;

    (function setupConnection() {
        var connection = new signalR.HubConnectionBuilder().withUrl("https://localhost:44353/messagehub").build();

        connection.on("messageToAdmin", function (message, user) {

            var newMessageNode = document.createElement("div");
            newMessageNode.classList.add("col-lg-12");
            var textnode = document.createTextNode(`${user}: ${message}`);
            newMessageNode.appendChild(textnode);
            var messageDiv = document.getElementById("messages");
            messageDiv.appendChild(newMessageNode, messageDiv.firstChild);

        });

        connection.on("newMessageToAdmin", function (message) {
            const conversation = document.querySelector(`[data-conversation="${message.conversationId}"]`);
            if (conversation) {
                conversation.innerHTML += `<div>
                            <span>User-${message.clientConnectionId}: </span>
                                <span> ${message.messageContent}</span>
                                </div>`;
            }
            else {
                const newConversation = `<div data-conversation="${message.conversationId}">
                            <h4>Conversation-${message.conversationId} Messages</h4>
                                <div>
                                    <span>User-${message.clientConnectionId}:</span>
                                    <span>${message.messageContent}</span>
                                </div>
                        </div>`;
                messageDiv.innerHTML += newConversation;
            }

        });

        connection.start().catch(err => console.error(err.toString())).then(response => console.log("connected"));
        conn = connection;
    })();

    button.addEventListener("click", async function () {
        let message = {
            connId: conn.connectionId,
            content: input.value
        };
        conn.invoke("SendMessageToUser", message.content, message.connId).catch(function (err) {
            return console.error(err.toString());
        });
    });
</script>
