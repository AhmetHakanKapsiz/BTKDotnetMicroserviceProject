@model IEnumerable<ProductDto>
<form>

    <div class="container row">

        @foreach (var product in Model)
        {
            <div class="col-4 ">
                <div class="p-0 my-3 border">
                    <div class="card">

                        <img src="~/Uploads/@product.ImageUrl" class="card-img-top" alt="@product.ImageUrl">
                        <div class="card-body">
                            <h3 class="card-title text-success">@product.Name</h3>
                            <span class="badge badge-light mb-2 ">@product.CategoryName</span>
                            <p class="card-text">@Html.Raw(product.Description)</p>
                            <div class="row">
                                <div class="col pt-1">
                                    <span style="font-size:23px;">@string.Format("{0:c}", product.Price)</span>
                                </div>
                                <div class="col">
                                    <a asp-action="Details" asp-route-productId="@product.ProductId"
                                       class="btn btn-success form-control">Details</a>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
</form>

<div id="messages">

</div>
<form id="message-form">
    <input type="text" placeholder="Mesaj Gönder"/>
    <button type="button">Gönder</button>
</form>

<script src="~/js/signalr/dist/browser/signalr.js" type="text/javascript"></script>
<script>
    let messageDiv = document.querySelector("#messages");
    let button = document.querySelector("#message-form>button");
    let input = document.querySelector("#message-form>input");
    let conn;

    (function setupConnection() {
        var connection = new signalR.HubConnectionBuilder().withUrl("https://localhost:44353/messagehub").build();

        connection.on("newMessageToUser", function (message) {
            const conversation = document.querySelector(`[data-conversation="${message.conversationId}"]`);
            if (conversation) {
                conversation.innerHTML += `<div>
                                <span>User-${message.clientConnectionId}: </span>
                                    <span> ${message.messageContent}</span>
                                    </div>`;
            }
            else {
                const newConversation = `<div data-conversation="${message.conversationId}">
                                <h4>Conversation-${message.conversationId} Messages</h4>
                                    <div>
                                        <span>User-${message.clientConnectionId}:</span>
                                        <span>${message.messageContent}</span>
                                    </div>
                                  <span data-conversation="${message.conversationId}">Delete Conversation</span>
                            </div>`;
                messageDiv.innerHTML += newConversation;
            }

        });

        connection.on("deleteConversation", function (conversationId) {
            const conversation = document.querySelector(`div[data-conversation="${conversationId}"]`);
            if(conversation){
                conversation.remove();
            }
        });

        connection.start().catch(err => console.error(err.toString())).then(response => console.log("connected"));
        conn = connection;
    })();

    button.addEventListener("click", async function(){
        let message = {
            clientConnectionId: conn.connectionId,
            MessageContent: input.value
        };
        conn.invoke("SendMessageToAdmin", message)
            .then(() => input.value = "")
            .catch(function (err) {
            return console.error(err.toString());
        });
    });

    window.addEventListener('click', async function (e) {
        if (e.target.attributes['data-conversation'] && e.target.localName === "span") {
            let conversationId = e.target.attributes['data-conversation'].nodeValue;
            conn.invoke("DeleteConversation", conversationId).catch(function (err) {
                return console.error(err.toString());
            });
        }
    });

</script>